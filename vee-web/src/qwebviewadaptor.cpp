/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -m -a qwebviewadaptor -i qwebview.h -l QWebView /home/esurleau/projects/vee/interfaces/com.trolltech.Qt.QWebView.xml
 *
 * qdbusxml2cpp is Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "qwebviewadaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QUrl>
#include <stdio.h>
/*
 * Implementation of adaptor class QWebViewAdaptor
 */

QWebViewAdaptor::QWebViewAdaptor(QWebView *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
    connect(parent, SIGNAL(urlChanged(const QUrl &)), this, SLOT(broadcastUrl(const QUrl&)));
}

QWebViewAdaptor::~QWebViewAdaptor()
{
    // destructor
}

QString QWebViewAdaptor::title() const
{
    // get the value of property title
    return qvariant_cast< QString >(parent()->property("title"));
}

QString QWebViewAdaptor::url() const
{
    // get the value of property url
    QByteArray qAr = parent()->url().toEncoded();
    return QString(qAr);
}

void QWebViewAdaptor::setUrl(const QString &value)
{
    // set the value of property url
    // FIXME replace with makeUrl()
    QUrl url = QUrl::fromUserInput(value);
    parent()->setUrl(url);
}

void QWebViewAdaptor::back()
{
    // handle method call com.trolltech.Qt.QWebView.back
    parent()->back();
}

void QWebViewAdaptor::forward()
{
    // handle method call com.trolltech.Qt.QWebView.forward
    parent()->forward();
}

void QWebViewAdaptor::reload()
{
    // handle method call com.trolltech.Qt.QWebView.reload
    parent()->reload();
}

void QWebViewAdaptor::setHtml(const QString &html)
{
    // handle method call com.trolltech.Qt.QWebView.setHtml
    parent()->setHtml(html);
}

void QWebViewAdaptor::stop()
{
    // handle method call com.trolltech.Qt.QWebView.stop
    parent()->stop();
}

void QWebViewAdaptor::broadcastUrl(const QUrl & url) {
    QByteArray qAr = parent()->url().toEncoded();
    emit urlChanged(QString(qAr));
}

#include "qwebviewadaptor.moc"

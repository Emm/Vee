/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -m -a qwebviewadaptor -i qwebview.h -l QWebView /home/esurleau/projects/vee/interfaces/com.trolltech.Qt.QWebView.xml
 *
 * qdbusxml2cpp is Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef QWEBVIEWADAPTOR_H_1312322835
#define QWEBVIEWADAPTOR_H_1312322835

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "qwebview.h"
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;

/*
 * Adaptor class for interface com.trolltech.Qt.QWebView
 */
class QWebViewAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "com.trolltech.Qt.QWebView")

public:
    QWebViewAdaptor(QWebView *parent);
    virtual ~QWebViewAdaptor();

    inline QWebView *parent() const
    { return static_cast<QWebView *>(QObject::parent()); }

public: // PROPERTIES
    Q_PROPERTY(QString title READ title)
    QString title() const;

    Q_PROPERTY(QString url READ url WRITE setUrl)
    QString url() const;
    void setUrl(const QString &value);

private slots:
    void broadcastUrl(const QUrl & url);

public Q_SLOTS: // METHODS
    void back();
    void forward();
    void reload();
    void setHtml(const QString &html);
    void stop();
Q_SIGNALS: // SIGNALS
    void iconChanged();
    void loadFinished(bool in0);
    void loadProgress(int progress);
    void loadStarted();
    void selectionChanged();
    void statusBarMessage(const QString &text);
    void titleChanged(const QString &title);
    void urlChanged(const QString &url);
};

#endif
